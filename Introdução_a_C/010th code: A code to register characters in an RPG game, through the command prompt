/*  IFMA - Monte Castelo
    Curso: Sistemas de Informação - primeiro período
    Alunos: Carlos Eduardo do Nascimento Costa, Saulo Ferro Maciel
    Atividade do dia 30 de janeiro de 2025   */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    char nome[51];  // Nome do personagem
    int forca;      // Atributo: força (0-100)
    int agilidade;  // Atributo: agilidade (0-100)
    int inteligencia; // Atributo: inteligência (0-100)
} Personagem;

// Função para determinar a classe do personagem
char* determinarClasse(float poderMedio) {
    return (poderMedio >= 70) ? "Herói" : "Vilão";
}

// Função para exibir os personagens formatados corretamente
void exibirPersonagem(Personagem* bd, int n) {
    printf("\nListagem de Personagens:\n");
    printf("---------------------------------\n");
    for (int i = 0; i < n; i++) {
        float poderMedio = (bd[i].forca + bd[i].agilidade + bd[i].inteligencia) / 3.0;
       
        printf("Nome: %s\n", bd[i].nome);
        printf("Atributos: %d | %d | %d\n", bd[i].forca, bd[i].agilidade, bd[i].inteligencia);
        printf("Poder Médio: %.2f\n", poderMedio);
        printf("Classe: %s\n", determinarClasse(poderMedio));
        printf("---------------------------------\n");
    }
}

int calcularPoder() {
    int n;
    printf("Quantos personagens vai ter no jogo?\n");
    scanf("%d", &n);

    // Criando um vetor de personagens dinamicamente
    Personagem* bd = (Personagem*)malloc(n * sizeof(Personagem));

    if (bd == NULL) {
        printf("Erro na alocação de memória!\n");
        return 1;
    }

    // Coletando os dados dos personagens
    for (int i = 0; i < n; i++) {
        printf("\nPersonagem %d:\n", i + 1);
       
        printf("Nome: ");
        scanf(" %[^\n]", bd[i].nome);  // Lê string com espaços

        printf("Força (0-100): ");
        scanf("%d", &bd[i].forca);

        printf("Agilidade (0-100): ");
        scanf("%d", &bd[i].agilidade);

        printf("Inteligência (0-100): ");
        scanf("%d", &bd[i].inteligencia);
    }

    // Exibir os personagens formatados corretamente
    exibirPersonagem(bd, n);

    // Liberando a memória alocada
    free(bd);

    return 0;
}

int main() {
    calcularPoder();
    return 0;
}
